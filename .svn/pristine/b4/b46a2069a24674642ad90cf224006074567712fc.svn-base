package cn._51app.stats.action;

import java.net.URLDecoder;
import java.util.List;
import java.util.Map;
import java.util.Random;

import org.apache.commons.lang3.StringUtils;
import org.apache.http.protocol.HTTP;
import org.apache.log4j.Logger;

import cn._51app.stats.base.BaseAction;
import cn._51app.stats.service.StatsService;
import cn._51app.stats.util.HttpUtils;

/**
 * 
 * @author jonny
 * 
 */
public class IdfaAction extends BaseAction {
	
	private static Logger callbacklogger=Logger.getLogger("loggerIdfaCallbackAppenderLogger");

	private static final long serialVersionUID = 8358037341369941549L;

	private String appid;
	
	private String idfa;
	
	private String os;
	
	private String rt;
	
	private String channel;
	
	private StatsService statsService;
	
	private String createDate;

	public String getAppid() {
		return appid;
	}

	public void setAppid(String appid) {
		this.appid = appid;
	}

	public String getIdfa() {
		return idfa;
	}

	public void setIdfa(String idfa) {
		this.idfa = idfa;
	}

	public String getOs() {
		return os;
	}

	public void setOs(String os) {
		this.os = os;
	}
	
	public String getRt() {
		return rt;
	}

	public void setRt(String rt) {
		this.rt = rt;
	}

	
	public StatsService getStatsService() {
		return statsService;
	}

	public void setStatsService(StatsService statsService) {
		this.statsService = statsService;
	}
	

	public String getChannel() {
		return channel;
	}

	public void setChannel(String channel) {
		this.channel = channel;
	}
	

	public String getCreateDate() {
		return createDate;
	}

	public void setCreateDate(String createDate) {
		this.createDate = createDate;
	}

	/**
	 * tengh 2016年2月29日 上午10:39:25
	 * @return
	 * TODO cpa激活回调
	 */
	public String appActive(){
		boolean returnflag=true;
		String flagUrl="";
		String callback="";
		try {
			int flag=statsService.appActive(appid,idfa,channel);
			System.err.println("回调被调用:"+flag+",appid:"+appid+",idfa"+idfa);
			if(flag>0){
				//i4
				flagUrl=this.statsService.queryflagUrl(appid);
				//其他渠道
				callback=this.statsService.queryflagCallback(appid,idfa);
				Map<String, Object> resuMap=this.statsService.queryChannel(flag);
				int channel=(Integer)resuMap.get("channel");
				if(channel==10){//积分墙渠道
					this.statsService.queryIsbaby(appid,idfa);
				}
				if(channel!=10){//非积分墙
					int level=0;
					if(channel==2){//i4
						level=(Integer)resuMap.get("level");
					}else if(level==4){//liang2
						level=(Integer)resuMap.get("level2");
					}
					if(StringUtils.isBlank(flagUrl) && StringUtils.isBlank(callback)){
						returnflag=false;
					}else{
						if(StringUtils.isNotBlank(callback)){
//							if(level==0){
//								HttpUtils.get(callback, null, 5, HTTP.UTF_8);
//								this.statsService.appFlagActive(appid,idfa);
//							}else{
//								if((int)(1+Math.random()*10)<=level){
//									HttpUtils.get(callback, null, 5, HTTP.UTF_8);
//									this.statsService.appFlagActive(appid,idfa);
//								}
//							}
							callback=URLDecoder.decode(callback);
							HttpUtils.get(callback, null, 5, HTTP.UTF_8);
							this.statsService.appFlagActive(appid,idfa);
						}else if(StringUtils.isNotBlank(flagUrl) && channel==2){
							if(level==0){
								HttpUtils.get(flagUrl+idfa, null, 5, HTTP.UTF_8);
								this.statsService.appFlagActive(appid,idfa);
							}else{
								if((int)(1+Math.random()*10)<=level){
									HttpUtils.get(flagUrl+idfa, null, 5, HTTP.UTF_8);
									this.statsService.appFlagActive(appid,idfa);
								}
							}
							
						}else{
							returnflag=false;
	//						callbacklogger.info("回调失败,appid:"+appid+",idfa:"+idfa);
						}
					}
				}
				callbacklogger.info("第三方回调成功,appid:"+appid+",idfa:"+idfa);
				returnflag=true;
			}else{
//				callbacklogger.info("回调失败,appid:"+appid+",idfa:"+idfa);
				returnflag=false;
			}
		} catch (Exception e) {
			returnflag=false;
			e.printStackTrace();
		}
		
		if(returnflag){
			if("1".equals(rt)){
				responseWrite("{\"success\" : \"true\", \"message\" : \"\"}");
			}else if("0".equals(rt)){
				responseWrite("1");
			}else if("3".equals(rt)){
				responseWrite("success");
			}else if("4".equals(rt)){
				responseWrite("{\"status\" : 1}");
			}
		}else{
			callbacklogger.info("回调失败,appid:"+appid);
			if("1".equals(rt)){
				responseWrite("{\"success\" : \"false\", \"message\" : \"未匹配到相应数据\"}");
			}else if("0".equals(rt)){
				responseWrite("0");
			}else if("3".equals(rt)){
				responseWrite("fail");
			}else if("4".equals(rt)){
				responseWrite("{\"status\" : 0}");
			}
		}
		return null;
	}
	
	public String testApp(){
		System.err.println("testApp----idfa:"+idfa+",appid:"+appid);
		responseWrite("{\"success\":\"true\",\"message\":\"ok\"}");
		return null;
	}
	
	public String updateI4(){
		responseWrite(this.statsService.queryIdfaInfo(createDate));
		return null;
		
	}
	
	public static void main(String[] args) {
		for (int i = 0; i < 10; i++) {
			System.err.println((int)(1+Math.random()*10));
		}
	}
}
